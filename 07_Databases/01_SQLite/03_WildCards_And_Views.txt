sqlite3 music.db
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE songs(_id INTEGER PRIMARY KEY, track INTEGER, title TEXT NOT NULL,album INTEGER);
CREATE TABLE albums(_id INTEGER PRIMARY KEY, name TEXT NOT NULL, artist INTEGER);
CREATE TABLE artists(_id INTEGER PRIMARY KEY, name TEXT NOT NULL);

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM songs WHERE title LIKE "doctor"				//any song which are "DOCTOR" or "Doctor"...
SELECT * FROM songs WHERE title like "a%";				//Finds any record that starts with "a";
SELECT * FORM songs WHERE title like "%a";				//Finds any record that ends in "a";	 
SELECT * FROM songs WHERE title LIKE "%doctor%";			//Finds any record that contain the word "doctor" at any position. LIKE is not case sensitive
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM songs WHERE title LIKE "_ove"				//Find any record that has four characters
SELECT * FROM songs WHERE title LIKE "_a%";				//Find any row that has a in the second position
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE VIEW artist_list AS 						//CREATING A View used as a Virtual table which is view only
SELECT artist.name,albums.name,songs.track,songs.title FROM songs
INNER JOIN albums ON songs.album=albums._id
INNER JOIN artists ON albums.artists=artists._id
ORDER BY artists.name,albums.name,songs.track,songs.title;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE VIEW album_names AS						//This type of view hide the primary keys(indexre) less confusing
SELECT * FROM albums
ORDER BY name;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE VIEW songs_list AS						//Sometimes is better to rename the field name for creating view
SELECT songs.track AS song_track, songs.title AS songs_title			
FROM songs
ORDER BY name;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

DROP VIEW album_names;							//Delete the VIEW
DROP TABLE albums;							//Delete a TABLE
----------------------------------------------------------------------------------------------------------------------------------------------------------------------